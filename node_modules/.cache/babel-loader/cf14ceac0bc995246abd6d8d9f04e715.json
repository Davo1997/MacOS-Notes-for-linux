{"ast":null,"code":"import _defineProperty from \"/home/davo/workspace/react-electron/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/davo/workspace/react-electron/src/Components/Notes.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { saveNote, getNotes } from '../Store/actions';\nimport './components.css';\n\nclass Notes extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.openCreateNoteModal = () => {\n      this.setState({\n        showModal: true\n      });\n    };\n\n    this.onSaveNote = () => {\n      saveNote(this.state.selectedNote);\n      this.handleCloseModal();\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        showModal: false,\n        selectedNote: {}\n      });\n    };\n\n    this.onClickNote = note => {\n      this.setState({\n        selectedNote: _objectSpread({}, note),\n        showModal: true\n      });\n    };\n\n    this.changeTitle = e => {\n      let newNote = this.state.selectedNote;\n      newNote.title = e.target.value;\n      this.setState({\n        selectedNote: newNote\n      });\n    };\n\n    this.changeText = e => {\n      let newNote = this.state.selectedNote;\n      newNote.text = e.target.value;\n      this.setState({\n        selectedNote: newNote\n      });\n    };\n\n    this.autoGrowTextArea = () => {\n      if (this.textInput.current) {\n        let element = this.textInput.current;\n        element.style.height = '5px';\n        element.style.height = element.scrollHeight + 'px';\n      }\n    };\n\n    this.autoGrowNote = element => {\n      element.style.height = '5px';\n      element.style.height = element.scrollHeight + 'px';\n    };\n\n    this.textInput = React.createRef();\n    this.state = {\n      showModal: false,\n      selectedNote: {}\n    };\n  }\n\n  async componentDidMount() {\n    await getNotes();\n  }\n\n  componentDidUpdate() {\n    this.autoGrowTextArea();\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"notes-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 3,\n      onClick: this.openCreateNoteModal,\n      key: \"initial\",\n      className: \"create-note\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"plus fas fa-plus-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), this.props.notes.map(note => {\n      return React.createElement(Col, {\n        sm: 3,\n        className: \"note-col\",\n        onClick: () => this.onClickNote(note),\n        key: note.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"note-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, note.title), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, note.text));\n    })), React.createElement(Modal, {\n      show: this.state.showModal,\n      onHide: this.handleCloseModal,\n      backdrop: \"static\",\n      keyboard: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      onChange: this.changeTitle,\n      className: \"modal-title-textarea\",\n      defaultValue: this.state.selectedNote.title,\n      maxLength: \"25\",\n      placeholder: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))), React.createElement(Modal.Body, {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      ref: this.textInput,\n      onChange: this.changeText,\n      className: \"modal-text-textarea\",\n      defaultValue: this.state.selectedNote.text,\n      placeholder: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleCloseModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.onSaveNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    notes: state.notes\n  };\n}\n\nexport default connect(mapStateToProps, null)(Notes);","map":{"version":3,"sources":["/home/davo/workspace/react-electron/src/Components/Notes.jsx"],"names":["React","Container","Row","Col","Modal","Button","connect","saveNote","getNotes","Notes","Component","constructor","props","openCreateNoteModal","setState","showModal","onSaveNote","state","selectedNote","handleCloseModal","onClickNote","note","changeTitle","e","newNote","title","target","value","changeText","text","autoGrowTextArea","textInput","current","element","style","height","scrollHeight","autoGrowNote","createRef","componentDidMount","componentDidUpdate","render","notes","map","id","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nimport { saveNote, getNotes } from '../Store/actions';\nimport './components.css';\n\nclass Notes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.textInput = React.createRef();\n    this.state = {\n      showModal: false,\n      selectedNote: {},\n    }\n  }\n\n  async componentDidMount() {\n    await getNotes();\n  }\n\n  componentDidUpdate() {\n    this.autoGrowTextArea();\n  }\n\n  openCreateNoteModal = () => {\n    this.setState({ showModal: true });\n  }\n\n  onSaveNote = () => {\n    saveNote(this.state.selectedNote);\n    this.handleCloseModal();\n  }\n\n  handleCloseModal = () => {\n    this.setState({ showModal: false, selectedNote: {} });\n  }\n\n  onClickNote = (note) => {\n    this.setState({ selectedNote: { ...note }, showModal: true });\n  }\n\n  changeTitle = (e) => {\n    let newNote = this.state.selectedNote;\n    newNote.title = e.target.value;\n    this.setState({ selectedNote: newNote })\n  }\n\n  changeText = (e) => {\n    let newNote = this.state.selectedNote;\n    newNote.text = e.target.value;\n    this.setState({ selectedNote: newNote });\n  }\n\n  autoGrowTextArea = () => {\n    if(this.textInput.current) {\n      let element = this.textInput.current;\n      element.style.height = '5px';\n      element.style.height = (element.scrollHeight)+'px';\n    }\n  }\n\n  autoGrowNote = (element) => {\n    element.style.height = '5px';\n    element.style.height = (element.scrollHeight)+'px';\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row className='notes-row'>\n          <Col\n            sm={3}\n            onClick={this.openCreateNoteModal}\n            key='initial'\n            className='create-note'\n          >\n            <i className=\"plus fas fa-plus-circle\"></i>\n          </Col>\n          {\n            this.props.notes.map(note => {\n              return (\n                <Col\n                  sm={3}\n                  className='note-col'\n                  onClick={() => this.onClickNote(note)}\n                  key={note.id}\n                >\n                  <p className='note-title'>{note.title}</p>\n                  <div>{note.text}</div>\n                </Col>\n              );\n            })\n          }\n        </Row>\n        <Modal\n          show={this.state.showModal}\n          onHide={this.handleCloseModal}\n          backdrop='static'\n          keyboard={false}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>\n              <textarea\n                onChange={this.changeTitle}\n                className='modal-title-textarea'\n                defaultValue={this.state.selectedNote.title}\n                maxLength='25'\n                placeholder='title'\n              >\n              </textarea>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body className='modal-body'>\n            <textarea\n              ref={this.textInput}\n              onChange={this.changeText}\n              className='modal-text-textarea'\n              defaultValue={this.state.selectedNote.text}\n              placeholder='text'\n            >\n            </textarea>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant='secondary' onClick={this.handleCloseModal}>Close</Button>\n            <Button variant='primary' onClick={this.onSaveNote}>Save</Button>\n          </Modal.Footer>\n        </Modal>\n      </Container>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { notes: state.notes };\n}\n\nexport default connect(mapStateToProps, null)(Notes);"]},"metadata":{},"sourceType":"module"}