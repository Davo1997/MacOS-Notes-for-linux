{"ast":null,"code":"import _regeneratorRuntime from\"/home/davo/workspace/react-electron/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/davo/workspace/react-electron/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import store from'../Store/index';var _window$require=window.require('electron'),ipcRenderer=_window$require.ipcRenderer;export var saveNote=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(note){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:ipcRenderer.invoke('save-note',note).then(function(notes){store.dispatch({type:'update-notes',payload:{notes:notes}});});case 1:case\"end\":return _context.stop();}}},_callee);}));return function saveNote(_x){return _ref.apply(this,arguments);};}();export var getNotes=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:ipcRenderer.invoke('get-notes','').then(function(notes){store.dispatch({type:'update-notes',payload:{notes:notes}});});case 1:case\"end\":return _context2.stop();}}},_callee2);}));return function getNotes(){return _ref2.apply(this,arguments);};}();// \"build\": \"npm run build-react && npm run build-electron\",\n// \"start\": \"concurrently \\\"cross-env BROWSER=none npm run start-react\\\" \\\"wait-on http://localhost:3000 && electron .  --disable-gpu\\\"\"","map":{"version":3,"sources":["/home/davo/workspace/react-electron/src/Store/actions.js"],"names":["store","window","require","ipcRenderer","saveNote","note","invoke","then","notes","dispatch","type","payload","getNotes"],"mappings":"iTAAA,MAAOA,CAAAA,KAAP,KAAkB,gBAAlB,C,oBACwBC,MAAM,CAACC,OAAP,CAAe,UAAf,C,CAAhBC,W,iBAAAA,W,CAER,MAAO,IAAMC,CAAAA,QAAQ,0FAAG,iBAAMC,IAAN,kHACtBF,WAAW,CAACG,MAAZ,CAAmB,WAAnB,CAAgCD,IAAhC,EAAsCE,IAAtC,CAA2C,SAACC,KAAD,CAAW,CAClDR,KAAK,CAACS,QAAN,CAAe,CAAEC,IAAI,CAAE,cAAR,CAAwBC,OAAO,CAAE,CAAEH,KAAK,CAALA,KAAF,CAAjC,CAAf,EACH,CAFD,EADsB,sDAAH,kBAARJ,CAAAA,QAAQ,4CAAd,CAMP,MAAO,IAAMQ,CAAAA,QAAQ,2FAAG,wIACtBT,WAAW,CAACG,MAAZ,CAAmB,WAAnB,CAAgC,EAAhC,EAAoCC,IAApC,CAAyC,SAACC,KAAD,CAAW,CAClDR,KAAK,CAACS,QAAN,CAAe,CAAEC,IAAI,CAAE,cAAR,CAAwBC,OAAO,CAAE,CAAEH,KAAK,CAALA,KAAF,CAAjC,CAAf,EACD,CAFD,EADsB,wDAAH,kBAARI,CAAAA,QAAQ,2CAAd,CAMP;AACA","sourcesContent":["import store from '../Store/index';\nconst { ipcRenderer } = window.require('electron');\n\nexport const saveNote = async(note) => {\n  ipcRenderer.invoke('save-note', note).then((notes) => {\n      store.dispatch({ type: 'update-notes', payload: { notes } });\n  });  \n};\n\nexport const getNotes = async() => {\n  ipcRenderer.invoke('get-notes', '').then((notes) => {\n    store.dispatch({ type: 'update-notes', payload: { notes } });\n  });\n}\n\n// \"build\": \"npm run build-react && npm run build-electron\",\n// \"start\": \"concurrently \\\"cross-env BROWSER=none npm run start-react\\\" \\\"wait-on http://localhost:3000 && electron .  --disable-gpu\\\"\"\n"]},"metadata":{},"sourceType":"module"}