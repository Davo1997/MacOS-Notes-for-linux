{"ast":null,"code":"'use strict';\n\nconst Command = require('./command');\n\nconst CommandCode = require('../constants/commands');\n\nconst Packet = require('../packets/packet'); // TODO: time statistics?\n// usefull for queue size and network latency monitoring\n// store created,sent,reply timestamps\n\n\nclass Ping extends Command {\n  constructor(callback) {\n    super();\n    this.onResult = callback;\n  }\n\n  start(packet, connection) {\n    const ping = new Packet(0, Buffer.from([1, 0, 0, 0, CommandCode.PING]), 0, 5);\n    connection.writePacket(ping);\n    return Ping.prototype.pingResponse;\n  }\n\n  pingResponse() {\n    // TODO: check it's OK packet. error check already done in caller\n    if (this.onResult) {\n      process.nextTick(this.onResult.bind(this));\n    }\n\n    return null;\n  }\n\n}\n\nmodule.exports = Ping;","map":null,"metadata":{},"sourceType":"script"}