{"ast":null,"code":"'use strict';\n\nconst SqlString = require('sqlstring');\n\nconst Connection = require('./lib/connection.js');\n\nconst ConnectionConfig = require('./lib/connection_config.js');\n\nconst parserCache = require('./lib/parsers/parser_cache');\n\nexports.createConnection = function (opts) {\n  return new Connection({\n    config: new ConnectionConfig(opts)\n  });\n};\n\nexports.connect = exports.createConnection;\nexports.Connection = Connection;\n\nconst Pool = require('./lib/pool.js');\n\nexports.createPool = function (config) {\n  const PoolConfig = require('./lib/pool_config.js');\n\n  return new Pool({\n    config: new PoolConfig(config)\n  });\n};\n\nexports.createPoolCluster = function (config) {\n  const PoolCluster = require('./lib/pool_cluster.js');\n\n  return new PoolCluster(config);\n};\n\nexports.createQuery = Connection.createQuery;\nexports.Pool = Pool;\n\nexports.createServer = function (handler) {\n  const Server = require('./lib/server.js');\n\n  const s = new Server();\n\n  if (handler) {\n    s.on('connection', handler);\n  }\n\n  return s;\n};\n\nexports.PoolConnection = require('./lib/pool_connection');\nexports.escape = SqlString.escape;\nexports.escapeId = SqlString.escapeId;\nexports.format = SqlString.format;\nexports.raw = SqlString.raw;\n\nexports.__defineGetter__('createConnectionPromise', () => require('./promise.js').createConnection);\n\nexports.__defineGetter__('createPoolPromise', () => require('./promise.js').createPool);\n\nexports.__defineGetter__('createPoolClusterPromise', () => require('./promise.js').createPoolCluster);\n\nexports.__defineGetter__('Types', () => require('./lib/constants/types.js'));\n\nexports.__defineGetter__('Charsets', () => require('./lib/constants/charsets.js'));\n\nexports.__defineGetter__('CharsetToEncoding', () => require('./lib/constants/charset_encodings.js'));\n\nexports.setMaxParserCache = function (max) {\n  parserCache.setMaxCache(max);\n};\n\nexports.clearParserCache = function () {\n  parserCache.clearCache();\n};","map":null,"metadata":{},"sourceType":"script"}