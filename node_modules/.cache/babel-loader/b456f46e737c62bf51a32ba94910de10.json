{"ast":null,"code":"var _jsxFileName = \"/home/davo/workspace/react-electron/src/Components/Notes.jsx\";\nimport React from 'react';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { createNote, getNotes } from '../Store/actions';\nimport './components.css';\n\nclass Notes extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.openCreateNoteModal = () => {\n      this.setState({\n        showModal: true\n      });\n    };\n\n    this.saveNote = () => {\n      if (this.state.selectedNote.id) {// update\n      } else {\n        createNote(this.state.selectedNote);\n      }\n\n      this.handleCloseModal();\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        showModal: false,\n        selectedNote: {}\n      });\n    };\n\n    this.onClickNote = note => {\n      this.setState({\n        selectedNote: note,\n        showModal: true\n      });\n    };\n\n    this.changeTitle = e => {\n      let newNote = this.state.selectedNote;\n      newNote.title = e.target.value;\n      this.setState({\n        selectedNote: newNote\n      });\n    };\n\n    this.changeText = e => {\n      let newNote = this.state.selectedNote;\n      newNote.text = e.target.value;\n      this.setState({\n        selectedNote: newNote\n      }); // this.autoGrowTextArea();\n    };\n\n    this.autoGrowTextArea = () => {\n      let element = this.textInput.current;\n      element.style.height = '5px';\n      element.style.height = element.scrollHeight + 'px';\n    };\n\n    this.autoGrowNote = element => {\n      element.style.height = '5px';\n      element.style.height = element.scrollHeight + 'px';\n    };\n\n    this.textInput = React.createRef();\n    this.notesRefs = [];\n    this.state = {\n      showModal: false,\n      selectedNote: {}\n    };\n  }\n\n  async componentDidMount() {\n    await getNotes();\n  }\n\n  componentDidUpdate() {\n    this.autoGrowTextArea();\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"notes-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 3,\n      onClick: this.openCreateNoteModal,\n      key: \"initial\",\n      className: \"create-note\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"plus fas fa-plus-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), this.props.notes.map(note => {\n      // let ref = React.createRef();\n      // this.notesRefs.push(ref);\n      return React.createElement(Col, {\n        sm: 3,\n        className: \"note-col\",\n        onClick: () => this.onClickNote(note),\n        key: note.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"note-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, note.title), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, note.text));\n    })), React.createElement(Modal, {\n      show: this.state.showModal,\n      onHide: this.handleCloseModal,\n      backdrop: \"static\",\n      keyboard: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      onChange: this.changeTitle,\n      className: \"modal-title-textarea\",\n      defaultValue: this.state.selectedNote.title,\n      maxLength: \"25\",\n      placeholder: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }))), React.createElement(Modal.Body, {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      ref: this.textInput,\n      onChange: this.changeText,\n      className: \"modal-text-textarea\",\n      defaultValue: this.state.selectedNote.text,\n      placeholder: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleCloseModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.saveNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    notes: state.notes\n  };\n}\n\nexport default connect(mapStateToProps, null)(Notes);","map":{"version":3,"sources":["/home/davo/workspace/react-electron/src/Components/Notes.jsx"],"names":["React","Container","Row","Col","Modal","Button","connect","createNote","getNotes","Notes","Component","constructor","props","openCreateNoteModal","setState","showModal","saveNote","state","selectedNote","id","handleCloseModal","onClickNote","note","changeTitle","e","newNote","title","target","value","changeText","text","autoGrowTextArea","element","textInput","current","style","height","scrollHeight","autoGrowNote","createRef","notesRefs","componentDidMount","componentDidUpdate","render","notes","map","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nimport { createNote, getNotes } from '../Store/actions';\nimport './components.css';\n\nclass Notes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.textInput = React.createRef();\n    this.notesRefs = [];\n    this.state = {\n      showModal: false,\n      selectedNote: {},\n    }\n  }\n\n  async componentDidMount() {\n    await getNotes();\n  }\n\n  componentDidUpdate() {\n    this.autoGrowTextArea();\n  }\n\n  openCreateNoteModal = () => {\n    this.setState({ showModal: true });\n  }\n\n  saveNote = () => {\n    if(this.state.selectedNote.id) {\n      // update\n    } else {\n      createNote(this.state.selectedNote);\n    }\n    this.handleCloseModal();\n  }\n\n  handleCloseModal = () => {\n    this.setState({ showModal: false, selectedNote: {} });\n  }\n\n  onClickNote = (note) => {\n    this.setState({ selectedNote: note, showModal: true });\n  }\n\n  changeTitle = (e) => {\n    let newNote = this.state.selectedNote;\n    newNote.title = e.target.value;\n    this.setState({ selectedNote: newNote })\n  }\n\n  changeText = (e) => {\n    let newNote = this.state.selectedNote;\n    newNote.text = e.target.value;\n    this.setState({ selectedNote: newNote });\n    // this.autoGrowTextArea();\n  }\n\n  autoGrowTextArea = () => {\n    let element = this.textInput.current;\n    element.style.height = '5px';\n    element.style.height = (element.scrollHeight)+'px';\n  }\n\n  autoGrowNote = (element) => {\n    element.style.height = '5px';\n    element.style.height = (element.scrollHeight)+'px';\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row className='notes-row'>\n          <Col\n            sm={3}\n            onClick={this.openCreateNoteModal}\n            key='initial'\n            className='create-note'\n          >\n            <i className=\"plus fas fa-plus-circle\"></i>\n          </Col>\n          {\n            this.props.notes.map(note => {\n              // let ref = React.createRef();\n              // this.notesRefs.push(ref);\n              return (\n                <Col\n                  sm={3}\n                  className='note-col'\n                  onClick={() => this.onClickNote(note)}\n                  key={note.id}\n                >\n                  <p className='note-title'>{note.title}</p>\n                  <div>{note.text}</div>\n                </Col>\n              );\n            })\n          }\n        </Row>\n        <Modal\n          show={this.state.showModal}\n          onHide={this.handleCloseModal}\n          backdrop='static'\n          keyboard={false}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>\n              <textarea\n                onChange={this.changeTitle}\n                className='modal-title-textarea'\n                defaultValue={this.state.selectedNote.title}\n                maxLength='25'\n                placeholder='title'\n              >\n              </textarea>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body className='modal-body'>\n            <textarea\n              ref={this.textInput}\n              onChange={this.changeText}\n              className='modal-text-textarea'\n              defaultValue={this.state.selectedNote.text}\n              placeholder='text'\n            >\n            </textarea>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant='secondary' onClick={this.handleCloseModal}>Close</Button>\n            <Button variant='primary' onClick={this.saveNote}>Save</Button>\n          </Modal.Footer>\n        </Modal>\n      </Container>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { notes: state.notes };\n}\n\nexport default connect(mapStateToProps, null)(Notes);"]},"metadata":{},"sourceType":"module"}