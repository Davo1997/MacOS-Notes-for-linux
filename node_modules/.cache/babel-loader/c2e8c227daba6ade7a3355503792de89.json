{"ast":null,"code":"import store from '../Store/index';\n\nconst _window$require = window.require('electron'),\n      ipcRenderer = _window$require.ipcRenderer;\n\nexport const createNote = async note => {\n  console.log('inside action ...'); // ipcRenderer.on('save-note-reply', (event, note) => {\n  //   console.log('newNote->>>>>>>>>>>>>', note);\n  //   store.dispatch({ type: 'create-note', payload: { note } });\n  // })\n  // console.log('\\n\\n\\n renderer', ipcRenderer);\n  // ipcRenderer.send('note', note);\n\n  ipcRenderer.on('asynchronous-reply', (event, arg) => {\n    console.log(arg); // prints \"pong\"\n  });\n  ipcRenderer.send('asynchronous-message', 'ping'); // const newNote = ipcRenderer.sendSync('save-note', note);\n  // console.log('newNote->>>>>>>>>>>>>', newNote);\n  // store.dispatch({ type: 'create-note', payload: { note: newNote } });\n}; // \"build\": \"npm run build-react && npm run build-electron\",\n// \"start\": \"concurrently \\\"cross-env BROWSER=none npm run start-react\\\" \\\"wait-on http://localhost:3000 && electron .  --disable-gpu\\\"\"","map":{"version":3,"sources":["/home/davo/workspace/react-electron/src/Store/actions.js"],"names":["store","window","require","ipcRenderer","createNote","note","console","log","on","event","arg","send"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;;wBACwBC,MAAM,CAACC,OAAP,CAAe,UAAf,C;MAAhBC,W,mBAAAA,W;;AAER,OAAO,MAAMC,UAAU,GAAG,MAAMC,IAAN,IAAe;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EADuC,CAEvC;AACA;AACA;AACA;AACA;AACA;;AAEAJ,EAAAA,WAAW,CAACK,EAAZ,CAAe,oBAAf,EAAqC,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACnDJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ,EADmD,CAClC;AAClB,GAFD;AAGAP,EAAAA,WAAW,CAACQ,IAAZ,CAAiB,sBAAjB,EAAyC,MAAzC,EAZuC,CAavC;AACA;AACA;AACD,CAhBM,C,CAkBP;AACA","sourcesContent":["import store from '../Store/index';\nconst { ipcRenderer } = window.require('electron');\n\nexport const createNote = async(note) => {\n  console.log('inside action ...');\n  // ipcRenderer.on('save-note-reply', (event, note) => {\n  //   console.log('newNote->>>>>>>>>>>>>', note);\n  //   store.dispatch({ type: 'create-note', payload: { note } });\n  // })\n  // console.log('\\n\\n\\n renderer', ipcRenderer);\n  // ipcRenderer.send('note', note);\n  \n  ipcRenderer.on('asynchronous-reply', (event, arg) => {\n    console.log(arg) // prints \"pong\"\n  })\n  ipcRenderer.send('asynchronous-message', 'ping')\n  // const newNote = ipcRenderer.sendSync('save-note', note);\n  // console.log('newNote->>>>>>>>>>>>>', newNote);\n  // store.dispatch({ type: 'create-note', payload: { note: newNote } });\n};\n\n// \"build\": \"npm run build-react && npm run build-electron\",\n// \"start\": \"concurrently \\\"cross-env BROWSER=none npm run start-react\\\" \\\"wait-on http://localhost:3000 && electron .  --disable-gpu\\\"\"\n"]},"metadata":{},"sourceType":"module"}