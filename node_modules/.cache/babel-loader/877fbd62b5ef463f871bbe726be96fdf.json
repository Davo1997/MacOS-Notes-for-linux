{"ast":null,"code":"var _jsxFileName = \"/home/davo/workspace/react-electron/src/Components/Notes.jsx\";\nimport React from 'react';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport './components.css';\nlet notes = [{\n  id: 1,\n  title: 'note 1',\n  text: 'Lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white'\n}, {\n  id: 2,\n  title: 'note 2',\n  text: 'Lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white'\n}, {\n  id: 3,\n  title: 'note 3',\n  text: 'Lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white'\n}, {\n  id: 4,\n  title: 'note 4',\n  text: 'Lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white'\n}, {\n  id: 5,\n  title: 'note 5',\n  text: 'Lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white'\n}];\n\nclass Notes extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCloseModal = () => {\n      this.setState({\n        showModal: false,\n        selectedNote: {}\n      });\n    };\n\n    this.onClickNote = note => {\n      this.setState({\n        selectedNote: note,\n        showModal: true\n      });\n    };\n\n    this.changeTitle = e => {\n      let newNote = this.state.selectedNote;\n      newNote.title = e.target.value;\n      this.setState({\n        selectedNote: newNote\n      });\n    };\n\n    this.changeText = e => {\n      let newNote = this.state.selectedNote;\n      newNote.text = e.target.value;\n      this.setState({\n        selectedNote: newNote,\n        showModal: false\n      });\n      this.autoGrowTextArea();\n    };\n\n    this.autoGrowTextArea = () => {\n      let element = this.textInput.current;\n      element.style.height = '5px';\n      element.style.height = element.scrollHeight + 'px';\n    };\n\n    this.textInput = React.createRef();\n    this.state = {\n      showModal: false,\n      selectedNote: {}\n    };\n  }\n\n  componentDidUpdate() {\n    this.autoGrowTextArea();\n  }\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"notes-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, notes.map(note => {\n      return React.createElement(Col, {\n        sm: 3,\n        className: \"note-col\",\n        onClick: () => this.onClickNote(note),\n        key: note.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"note-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, note.title), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, note.text));\n    })), React.createElement(Modal, {\n      show: this.state.showModal,\n      onHide: this.handleCloseModal,\n      backdrop: \"static\",\n      keyboard: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      onChange: this.changeTitle,\n      className: \"modal-title-textarea\",\n      defaultValue: this.state.selectedNote.title,\n      maxLength: \"25\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }))), React.createElement(Modal.Body, {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      ref: this.textInput,\n      onChange: this.changeText,\n      className: \"modal-text-textarea\",\n      defaultValue: this.state.selectedNote.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleCloseModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.saveNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nexport default Notes;","map":{"version":3,"sources":["/home/davo/workspace/react-electron/src/Components/Notes.jsx"],"names":["React","Container","Row","Col","Modal","Button","notes","id","title","text","Notes","Component","constructor","props","handleCloseModal","setState","showModal","selectedNote","onClickNote","note","changeTitle","e","newNote","state","target","value","changeText","autoGrowTextArea","element","textInput","current","style","height","scrollHeight","createRef","componentDidUpdate","render","map","saveNote"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport './components.css';\n\nlet notes = [\n  {\n    id: 1,\n    title: 'note 1',\n    text: 'Lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white',\n  },\n  {\n    id: 2,\n    title: 'note 2',\n    text: 'Lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white',\n  },\n  {\n    id: 3,\n    title: 'note 3',\n    text: 'Lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white',\n  },\n  {\n    id: 4,\n    title: 'note 4',\n    text: 'Lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white',\n  },\n  {\n    id: 5,\n    title: 'note 5',\n    text: 'Lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white',\n  }\n];\n\nclass Notes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.textInput = React.createRef();\n    this.state = {\n      showModal: false,\n      selectedNote: {},\n    }\n  }\n\n  componentDidUpdate() {\n    this.autoGrowTextArea();\n  }\n\n  handleCloseModal = () => {\n    this.setState({ showModal: false, selectedNote: {} });\n  }\n\n  onClickNote = (note) => {\n    this.setState({ selectedNote: note, showModal: true });\n  }\n\n  changeTitle = (e) => {\n    let newNote = this.state.selectedNote;\n    newNote.title = e.target.value;\n    this.setState({ selectedNote: newNote })\n  }\n\n  changeText = (e) => {\n    let newNote = this.state.selectedNote;\n    newNote.text = e.target.value;\n    this.setState({ selectedNote: newNote, showModal: false })\n    this.autoGrowTextArea();\n  }\n\n  autoGrowTextArea = () => {\n    let element = this.textInput.current;\n    element.style.height = '5px';\n    element.style.height = (element.scrollHeight)+'px';\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row className='notes-row'>\n          {\n            notes.map(note => {\n              return <Col sm={3} className='note-col' onClick={() => this.onClickNote(note)} key={note.id}>\n                <p className='note-title'>{note.title}</p>\n                <div>{note.text}</div>\n              </Col>;\n            })\n          }\n        </Row>\n        <Modal\n          show={this.state.showModal}\n          onHide={this.handleCloseModal}\n          backdrop='static'\n          keyboard={false}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>\n              <textarea\n                onChange={this.changeTitle}\n                className='modal-title-textarea'\n                defaultValue={this.state.selectedNote.title}\n                maxLength='25'\n              >\n              </textarea>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body className='modal-body'>\n            <textarea\n              ref={this.textInput}\n              onChange={this.changeText}\n              className='modal-text-textarea'\n              defaultValue={this.state.selectedNote.text}\n            >\n            </textarea>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant='secondary' onClick={this.handleCloseModal}>Close</Button>\n            <Button variant='primary' onClick={this.saveNote}>Save</Button>\n          </Modal.Footer>\n        </Modal>\n      </Container>\n    );\n  }\n}\n\nexport default Notes;"]},"metadata":{},"sourceType":"module"}