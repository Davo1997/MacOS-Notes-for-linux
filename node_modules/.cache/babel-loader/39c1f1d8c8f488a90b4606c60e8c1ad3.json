{"ast":null,"code":"(function () {\n  var _ = require('underscore');\n\n  function sanitize_input(input) {\n    // http://www.postgresql.org/docs/9.0/static/sql-syntax-lexical.html [4.1.2.1-4.1.2.2]\n    // single quotes (') must be replaced with double single quotes ('')\n    input = input.replace(/'/g, '\\'\\''); // backslashes (\\) must be replaced with double backslashes (\\\\)\n\n    input = input.replace(/\\\\/g, '\\\\\\\\'); // double quotes (\") must be replaced with escaped quotes (\\\\\")\n\n    input = input.replace(/\"/g, '\\\\\"');\n    return input;\n  }\n\n  function to_string(input, sanitize) {\n    switch (typeof input) {\n      case 'boolean':\n      case 'number':\n      case 'object':\n        return String(input);\n\n      case 'string':\n        return sanitize ? sanitize_input(input) : input;\n\n      default:\n        return '';\n    }\n  }\n\n  module.exports = function (options) {\n    options = _.defaults({}, options, {\n      sanitize: false\n    });\n    return {\n      stringify: function (data, callback) {\n        var hstore = Object.keys(data).map(function (key) {\n          if (data[key] === null) {\n            return '\"' + to_string(key, options.sanitize) + '\"=>NULL';\n          } else {\n            return '\"' + to_string(key, options.sanitize) + '\"=>\"' + to_string(data[key], options.sanitize) + '\"';\n          }\n        });\n        var joined = hstore.join();\n        if (!callback || callback === null) return joined;\n        callback(joined);\n      },\n      parse: function (string, callback) {\n        var result = {},\n            //using [\\s\\S] to match any character, including line feed and carriage return,\n        r = /([\"])(?:\\\\\\1|\\\\\\\\|[\\s\\S])*?\\1|NULL/g,\n            matches = string.match(r),\n            i,\n            l,\n            clean = function (value) {\n          // Remove leading double quotes\n          value = value.replace(/^\\\"|\\\"$/g, \"\"); // Unescape quotes\n\n          value = value.replace(/\\\\\"/g, \"\\\"\"); //Unescape backslashes\n\n          value = value.replace(/\\\\\\\\/g, \"\\\\\"); //Unescape single quotes\n\n          value = value.replace(/''/g, \"'\");\n          return value;\n        };\n\n        if (matches) {\n          for (i = 0, l = matches.length; i < l; i += 2) {\n            if (matches[i] && matches[i + 1]) {\n              var key = clean(matches[i]);\n              var value = matches[i + 1];\n              result[key] = value == \"NULL\" ? null : clean(value);\n            }\n          }\n        }\n\n        if (!callback || callback === null) return result;\n        callback(result);\n      }\n    };\n  };\n})();","map":null,"metadata":{},"sourceType":"script"}