{"ast":null,"code":"import store from '../Store/index';\nimport sequelize from '../models/index';\nexport const createNote = async note => {\n  let queryString = \"\\n      SELECT\\n        workflow_states.id AS stateId,\\n        workflow_states.currentScenarioId,\\n        workflow_states.history,\\n        workflow_states.contactId,\\n        workflow_states.userId,\\n        workflow_states.sentDate,\\n        workflows.status AS status,\\n        scenarios.*\\n      FROM\\n        workflow_states\\n        INNER JOIN scenarios ON workflow_states.currentScenarioId = scenarios.id\\n        INNER JOIN workflows ON workflows.id = scenarios.workflowId\\n        WHERE scenarios.conditions LIKE '%\\\"type\\\": \\\"not_responded\\\"%' AND workflows.status NOT IN ('paused', 'ended')\";\n  let unrespondedScenarios = await db.query(queryString, {\n    type: Sequelize.QueryTypes.SELECT\n  });\n  const newNote = await Notes.create(note);\n  store.dispatch({\n    type: 'create-note',\n    payload: {\n      note: newNote\n    }\n  });\n};","map":{"version":3,"sources":["/home/davo/workspace/react-electron/src/Store/actions.js"],"names":["store","sequelize","createNote","note","queryString","unrespondedScenarios","db","query","type","Sequelize","QueryTypes","SELECT","newNote","Notes","create","dispatch","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAMC,IAAN,IAAe;AACvC,MAAIC,WAAW,gmBAAf;AAeA,MAAIC,oBAAoB,GAAG,MAAMC,EAAE,CAACC,KAAH,CAASH,WAAT,EAAsB;AAAEI,IAAAA,IAAI,EAAEC,SAAS,CAACC,UAAV,CAAqBC;AAA7B,GAAtB,CAAjC;AACA,QAAMC,OAAO,GAAG,MAAMC,KAAK,CAACC,MAAN,CAAaX,IAAb,CAAtB;AACAH,EAAAA,KAAK,CAACe,QAAN,CAAe;AAAEP,IAAAA,IAAI,EAAE,aAAR;AAAuBQ,IAAAA,OAAO,EAAE;AAAEb,MAAAA,IAAI,EAAES;AAAR;AAAhC,GAAf;AACD,CAnBM","sourcesContent":["import store from '../Store/index';\nimport sequelize from '../models/index';\n\nexport const createNote = async(note) => {\n  let queryString = `\n      SELECT\n        workflow_states.id AS stateId,\n        workflow_states.currentScenarioId,\n        workflow_states.history,\n        workflow_states.contactId,\n        workflow_states.userId,\n        workflow_states.sentDate,\n        workflows.status AS status,\n        scenarios.*\n      FROM\n        workflow_states\n        INNER JOIN scenarios ON workflow_states.currentScenarioId = scenarios.id\n        INNER JOIN workflows ON workflows.id = scenarios.workflowId\n        WHERE scenarios.conditions LIKE '%\"type\": \"not_responded\"%' AND workflows.status NOT IN ('paused', 'ended')`;\n  let unrespondedScenarios = await db.query(queryString, { type: Sequelize.QueryTypes.SELECT });\n  const newNote = await Notes.create(note);\n  store.dispatch({ type: 'create-note', payload: { note: newNote } });\n};"]},"metadata":{},"sourceType":"module"}