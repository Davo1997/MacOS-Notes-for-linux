{"ast":null,"code":"var _jsxFileName = \"/home/davo/workspace/react-electron/src/Components/Notes.jsx\";\nimport React from 'react';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport './components.css';\nlet notes = [{\n  id: 1,\n  title: 'note 1',\n  text: 'Lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white'\n}, {\n  id: 2,\n  title: 'note 2',\n  text: 'Lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white'\n}, {\n  id: 3,\n  title: 'note 3',\n  text: 'Lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white'\n}, {\n  id: 4,\n  title: 'note 4',\n  text: 'Lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white'\n}, {\n  id: 5,\n  title: 'note 5',\n  text: 'Lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white'\n}];\n\nclass Notes extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.saveNote = () => {\n      // save this.state.selectedNote\n      this.handleCloseModal();\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        showModal: false,\n        selectedNote: {}\n      });\n    };\n\n    this.onClickNote = note => {\n      this.setState({\n        selectedNote: note,\n        showModal: true\n      });\n    };\n\n    this.changeTitle = e => {\n      let newNote = this.state.selectedNote;\n      newNote.title = e.target.value;\n      this.setState({\n        selectedNote: newNote\n      });\n    };\n\n    this.changeText = e => {\n      let newNote = this.state.selectedNote;\n      newNote.text = e.target.value;\n      this.setState({\n        selectedNote: newNote\n      });\n      this.autoGrowTextArea();\n    };\n\n    this.autoGrowTextArea = () => {\n      let element = this.textInput.current;\n      element.style.height = '5px';\n      element.style.height = element.scrollHeight + 'px';\n    };\n\n    this.autoGrowNote = element => {\n      element.style.height = '5px';\n      element.style.height = element.scrollHeight + 'px';\n    };\n\n    this.textInput = React.createRef();\n    this.notesRefs = [];\n    this.state = {\n      showModal: false,\n      notes,\n      selectedNote: {}\n    };\n  }\n\n  componentDidUpdate() {\n    this.autoGrowTextArea();\n  } // componentDidMount() {\n  //   this.notesRefs.forEach(ref => {\n  //     console.log(ref);\n  //     this.autoGrowNote(ref.current);\n  //   });\n  // }\n\n\n  render() {\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"notes-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.notes.map(note => {\n      let ref = React.createRef();\n      this.notesRefs.push(ref);\n      return React.createElement(Col, {\n        sm: 3,\n        className: \"note-col\",\n        onClick: () => this.onClickNote(note),\n        key: note.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"note-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, note.title), React.createElement(\"div\", {\n        ref: ref,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, note.text));\n    })), React.createElement(Modal, {\n      show: this.state.showModal,\n      onHide: this.handleCloseModal,\n      backdrop: \"static\",\n      keyboard: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      onChange: this.changeTitle,\n      className: \"modal-title-textarea\",\n      defaultValue: this.state.selectedNote.title,\n      maxLength: \"25\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }))), React.createElement(Modal.Body, {\n      className: \"modal-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      ref: this.textInput,\n      onChange: this.changeText,\n      className: \"modal-text-textarea\",\n      defaultValue: this.state.selectedNote.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: this.handleCloseModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Close\"), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.saveNote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Save\"))));\n  }\n\n}\n\nexport default Notes;","map":{"version":3,"sources":["/home/davo/workspace/react-electron/src/Components/Notes.jsx"],"names":["React","Container","Row","Col","Modal","Button","notes","id","title","text","Notes","Component","constructor","props","saveNote","handleCloseModal","setState","showModal","selectedNote","onClickNote","note","changeTitle","e","newNote","state","target","value","changeText","autoGrowTextArea","element","textInput","current","style","height","scrollHeight","autoGrowNote","createRef","notesRefs","componentDidUpdate","render","map","ref","push"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Container, Row, Col, Modal, Button } from 'react-bootstrap';\nimport './components.css';\n\nlet notes = [\n  {\n    id: 1,\n    title: 'note 1',\n    text: 'Lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white',\n  },\n  {\n    id: 2,\n    title: 'note 2',\n    text: 'Lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white',\n  },\n  {\n    id: 3,\n    title: 'note 3',\n    text: 'Lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white',\n  },\n  {\n    id: 4,\n    title: 'note 4',\n    text: 'Lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white',\n  },\n  {\n    id: 5,\n    title: 'note 5',\n    text: 'Lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white lorem ipsum dolor white',\n  }\n];\n\nclass Notes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.textInput = React.createRef();\n    this.notesRefs = [];\n    this.state = {\n      showModal: false,\n      notes,\n      selectedNote: {},\n    }\n  }\n\n  componentDidUpdate() {\n    this.autoGrowTextArea();\n  }\n\n  // componentDidMount() {\n  //   this.notesRefs.forEach(ref => {\n  //     console.log(ref);\n  //     this.autoGrowNote(ref.current);\n  //   });\n  // }\n\n  saveNote = () => {\n    // save this.state.selectedNote\n    this.handleCloseModal();\n  }\n\n  handleCloseModal = () => {\n    this.setState({ showModal: false, selectedNote: {} });\n  }\n\n  onClickNote = (note) => {\n    this.setState({ selectedNote: note, showModal: true });\n  }\n\n  changeTitle = (e) => {\n    let newNote = this.state.selectedNote;\n    newNote.title = e.target.value;\n    this.setState({ selectedNote: newNote })\n  }\n\n  changeText = (e) => {\n    let newNote = this.state.selectedNote;\n    newNote.text = e.target.value;\n    this.setState({ selectedNote: newNote })\n    this.autoGrowTextArea();\n  }\n\n  autoGrowTextArea = () => {\n    let element = this.textInput.current;\n    element.style.height = '5px';\n    element.style.height = (element.scrollHeight)+'px';\n  }\n\n  autoGrowNote = (element) => {\n    element.style.height = '5px';\n    element.style.height = (element.scrollHeight)+'px';\n  }\n\n  render() {\n    return (\n      <Container>\n        <Row className='notes-row'>\n          {\n            this.state.notes.map(note => {\n              let ref = React.createRef();\n              this.notesRefs.push(ref);\n              return (\n                <Col\n                  sm={3}\n                  className='note-col'\n                  onClick={() => this.onClickNote(note)}\n                  key={note.id}\n                >\n                  <p className='note-title'>{note.title}</p>\n                  <div ref={ref}>{note.text}</div>\n                </Col>\n              );\n            })\n          }\n        </Row>\n        <Modal\n          show={this.state.showModal}\n          onHide={this.handleCloseModal}\n          backdrop='static'\n          keyboard={false}\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>\n              <textarea\n                onChange={this.changeTitle}\n                className='modal-title-textarea'\n                defaultValue={this.state.selectedNote.title}\n                maxLength='25'\n              >\n              </textarea>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body className='modal-body'>\n            <textarea\n              ref={this.textInput}\n              onChange={this.changeText}\n              className='modal-text-textarea'\n              defaultValue={this.state.selectedNote.text}\n            >\n            </textarea>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant='secondary' onClick={this.handleCloseModal}>Close</Button>\n            <Button variant='primary' onClick={this.saveNote}>Save</Button>\n          </Modal.Footer>\n        </Modal>\n      </Container>\n    );\n  }\n}\n\nexport default Notes;"]},"metadata":{},"sourceType":"module"}